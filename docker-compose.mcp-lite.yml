version: '3.8'

name: mcp-maax-cob-lite

services:
  # PostgreSQL Database (necessário)
  db:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: mcp
      POSTGRES_USER: mcpuser
      POSTGRES_PASSWORD: mcppass
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U mcpuser -d mcp"]
      interval: 30s
      timeout: 10s
      retries: 5

  # MCP Server (STDIO + HTTP/SSE + WebSocket)
  mcp:
    build:
      context: .
      dockerfile: Dockerfile.mcp
      target: runtime
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    environment:
      NODE_ENV: production
      MCP_TRANSPORT: http  # Mudando para HTTP que é mais fácil de testar
      MCP_HTTP_PORT: 3001
      MCP_WS_PORT: 3002
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
      POSTGRES_DB: mcp
      POSTGRES_USER: mcpuser
      POSTGRES_PASSWORD: mcppass
      ENCRYPTION_KEY_HEX: 0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef
      WEBHOOK_HMAC_SECRET: mcp-webhook-secret-2025
      RATE_LIMIT: 120
    ports:
      - "3001:3001"  # HTTP/SSE
      - "3002:3002"  # WebSocket
    stdin_open: true
    tty: true
    healthcheck:
      test: ["CMD", "node", "-e", "console.log('MCP healthy')"]
      interval: 30s
      timeout: 10s
      retries: 5

volumes:
  postgres_data:

networks:
  default:
    name: mcp-network-lite